name: "Build & Release"

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:  
  apple_build:      
    name: Build & Release 
    runs-on: macos-latest 

    steps:
        #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

        #3 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.3'
          channel: 'stable'

        #4 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

        #8 Build IPA ( IOS Build )
      - name: Build IPA
        run: flutter build ipa --no-codesign

      - name: Compress Archives and IPAs
        run: |
          cd build
          tar -czf ios_build.tar.gz ios

      - name: Build macOS App
        run: flutter build macos --release

      - name: Compress macOS App
        run: |
          cd build/macos/Build/Products
          tar -czf macos_build.tar.gz Release

        #9 Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-artifacts
          path: build/ios_build.tar.gz

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-artifacts
          path: build/macos/Build/Products/macos_build.tar.gz

  windows_build:
      name: Windows Build
      runs-on: windows-latest
    
      steps:
        # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

        # 2. Set Up Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.3'
          channel: 'stable'

        # 3. Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

        # 4. Build Windows App
      - name: Build Windows App
        run: flutter build windows --release
      
      - name: Compress Windows App
        run: |
          cd build\windows\x64\runner
          powershell Compress-Archive -Path Release -DestinationPath windows_build.zip

        # 5. Upload Windows Artifacts
      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: build/windows/x64/runner/windows_build.zip
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [apple_build, windows_build]
    # needs: windows_build

    steps:
        # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

        # 2. Download Apple Artifacts
      - name: Download Apple Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ios-artifacts
          path: build/

        # 2. Download Apple Artifacts
      - name: Download Apple Artifacts
        uses: actions/download-artifact@v4
        with:
          name: mac-artifacts
          path: build/

        # 3. Download Windows Artifacts
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts
          path: build/

        #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

        # 2. Set Up Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.3'
          channel: 'stable'

        # 3. Install Dependencies
      - name: Install Dependencies
        run: flutter pub get
      # Step 3: Install dependencies for building Linux apps
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev libsecret-1-dev
      # Step 4: Enable Linux desktop support
      - name: Enable Linux Desktop Support
        run: flutter config --enable-linux-desktop

        # 5. Build Linux App
      - name: Build Linux App
        run: flutter build linux --release
      
      - name: Compress Linux App
        run: |
          cd build/linux/x64/release
          tar -czf linux_build.tar.gz bundle
      
       #6 Building APK
      - name: Build APK
        run: flutter build apk --release --split-per-abi --no-shrink

        #7 Building App Bundle (aab)
      - name: Build appBundle
        run: flutter build appbundle --no-shrink

      # 6. Upload Linux Artifacts
      - name: Upload Android and Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Android_Linux_Release
          path: |
            build/linux/x64/release/linux_build.tar.gz
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk
            build/app/outputs/bundle/release/app-release.aab

        #10 Extract Version
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if Tag Exists
        id: check_tag
        run: |
            TAG_CHECK=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/v${{ env.VERSION }}")
            if [[ $TAG_CHECK == *"sha"* ]]; then
              echo "TAG_EXISTS=true" >> $GITHUB_ENV
            else
              echo "TAG_EXISTS=false" >> $GITHUB_ENV
            fi

        #12 Modify Tag if it Exists
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV
        #13 Create Release
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk
            build/app/outputs/bundle/release/app-release.aab
            build/ios_build.tar.gz
            build/macos_build.tar.gz
            build/windows_build.zip
            build/linux/x64/release/linux_build.tar.gz
          tag: v${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}